/**
 * @packageDocumentation
 * @module api.functional.cli
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

import type { IQuestion, IQuestionResponse } from "./../../structures/cli/IQuestion";

/**
 * @controller CLIController.question()
 * @path POST /cli/question
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export function question
    (
        connection: IConnection,
        input: IQuestion
    ): Promise<question.Output>
{
    return Fetcher.fetch
    (
        connection,
        question.ENCRYPTED,
        question.METHOD,
        question.path(),
        input
    );
}
export namespace question
{
    export type Input = IQuestion;
    export type Output = IQuestionResponse;

    export const METHOD = "POST" as const;
    export const PATH: string = "/cli/question";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
    };

    export function path(): string
    {
        return `/cli/question`;
    }
}